<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.thoth</groupId>
    <artifactId>thoth-jaspic</artifactId>
    <version>1.0.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    
    <!--
        Areas of Research

            [DONE] 1. Embed with web-app
            Get JASPIC up and running embedded within a WAR.  Requests run the code.  Nothing actually protected.

            [DONE] 2.Run multiple applications
            JASPIC webapp only affects its WAR.  Does not affect any other WAR deployed to the same server.

            [DONE] 3. Principal object
            Generate a Principal object from HttpServletRequest.
            No roles, just a Principal with the right name
        
            [DONE] 4a. Is User In Role (web.xml)
            Generate a Principal object with ROLES from an HttpServletRequest. 
            Valid roles are in web.xml
        
            [DONE] 4b. Is User In Role (web.xml and glassfish-web.xml)
            Generate a Principal object with ROLES from an HttpServletRequest. 
            Application-specific, valid roles are in web.xml.  Application-specific
            roles are mapped to user's groups in glassfish-web.xml
        
            5a. Is User In Role (annotations)
            Generate a Principal object from HttpServletRequest with roles. 
            Valid roles are in @DeclaredRoles annotation
        
            5b. Is User In Role (annotations and glassfish-web.xml)
            Generate a Principal object with ROLES from an HttpServletRequest. 
            Application-specific, valid roles are in web.xml.  Application-specific
            roles are mapped to user's groups in glassfish-web.xml
            
            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
            
            3.      Servlet protected 1-1
            Protect a servlet where internal `role` and external `group` have the same value.
            Use web.xml and glassfish-web.xml

            4.      Servlet protected 1-2
            Protect a servlet where internal `role` and external `group` have the same value.
            Use @Annotations and glassfish-web.xml

            5.      Servlet protected 2-1
            Protect a servlet where internal `role` is application specific and is mapped to external `group`.
            Use web.xml and glassfish-web.xml

            6.      Servlet protected 2-2
            Protect a servlet where internal `role` is application specific and is mapped to external `group`.
            Use @ Annotations and glassfish-web.xml

            7.      Servlet public and private
            Application has both public and private servlets.

            8.      JSP protected 1-1
            Protect a JSP where internal `role` and external `group` have the same value.
            Use web.xml and glassfish-web.xml

            9.      JSP protected 2-1
            Protect a JSP where internal `role` is application specific and is mapped to external `group`.
            Use web.xml and glassfish-web.xml

            10. JSP public and private
            Application has both public and private JSPs.

            11. Public Servlet forward request to protected JSP
            Application has a public Servlet that forwards to a protected JSP

            12. CDI integration
            @Inject the JASPIC stuff into the Filter using CDI.

            13. JSF page protected
            Protect a JSF page thatâ€™s loaded with the default JSF controller
            web.xml?

            14. JSF controller protected
            Protect a JSF controller  
            web.xml?

            15. JAX-RS...JWT (web tokens)
    -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>
    <modules>
        <module>01-jaspic-embedded</module>
        <module>02-jaspic-goodneighbor</module>
        <module>02-jaspic-helloworld</module>
        <module>03-jaspic-principal</module>
        <module>04-jaspic-isuserinrole-webxml</module>
        <module>05-japsic-isuserinrole-declareroles</module>
    </modules>
    <dependencies>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.5</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>            
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.6.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                </configuration>
            </plugin>
        </plugins>
        
    </build>
</project>